DROP TABLE IF EXISTS FILM_LIKE_T;
DROP TABLE IF EXISTS FRIENDSHIP_T;
DROP TABLE IF EXISTS REVIEW_T;
DROP TABLE IF EXISTS USER_T;
DROP TABLE IF EXISTS FILM_GENRE_T;
DROP TABLE IF EXISTS FILM_DIRECTOR_T;
DROP TABLE IF EXISTS FILM_T;
DROP TABLE IF EXISTS GENRE_T;
DROP TABLE IF EXISTS MPA_RATING_T;
DROP TABLE IF EXISTS DIRECTORS_T;

CREATE TABLE IF NOT EXISTS MPA_RATING_T(
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT MPA_RATING_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS DIRECTORS_T (
    ID BIGINT NOT NULL AUTO_INCREMENT ,
    NAME CHARACTER VARYING NOT NULL,
    CONSTRAINT DIRECTORS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS FILM_T(
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(200) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200),
	RELEASE_DATE DATE,
	DURATION INTEGER,
    RATE INTEGER,
	MPA_RATING_ID BIGINT NOT NULL,
    CONSTRAINT FILM_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_FK FOREIGN KEY (MPA_RATING_ID) REFERENCES MPA_RATING_T(ID) ON
	    DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRE_T (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS USER_T (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(200),
	EMAIL CHARACTER VARYING(200) NOT NULL,
	LOGIN CHARACTER VARYING(200) NOT NULL,
	BIRTHDAY DATE,
	CONSTRAINT USER_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS FILM_GENRE_T (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT NOT NULL,
	GENRE_ID BIGINT NOT NULL,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE_T(ID) ON
	    DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILM_T(ID) ON
	    DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTOR_T (
     ID BIGINT NOT NULL AUTO_INCREMENT,
     FILM_ID BIGINT NOT NULL,
     DIRECTOR_ID BIGINT NOT NULL,
     CONSTRAINT FILM_DIRECTOR_PK PRIMARY KEY (ID),
     CONSTRAINT FILM_DIRECTOR_FK FOREIGN KEY (DIRECTOR_ID) REFERENCES DIRECTORS_T(ID) ON
         DELETE RESTRICT ON UPDATE CASCADE,
     CONSTRAINT FILM_DIRECTOR_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILM_T(ID) ON
         DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS  FRIENDSHIP_T (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	USER_ID BIGINT NOT NULL,
	FRIEND_ID BIGINT NOT NULL,
	STATUS BOOLEAN NOT NULL,
	CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (ID),
	CONSTRAINT FRIENDSHIP_ID_FK FOREIGN KEY (FRIEND_ID) REFERENCES USER_T(ID) ON
	    DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES USER_T(ID) ON
	    DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_LIKE_T (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT NOT NULL,
	USER_ID BIGINT NOT NULL,
	CONSTRAINT ID_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_ID_FK FOREIGN KEY (FILM_ID) REFERENCES FILM_T(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT USER_ID_LKS_FK FOREIGN KEY (USER_ID) REFERENCES USER_T(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEW_T(
	ID BIGINT NOT NULL AUTO_INCREMENT,
	CONTENT CHARACTER VARYING NOT NULL,
	IS_POSITIVE BOOLEAN,
	USER_ID BIGINT NOT NULL,
	FILM_ID BIGINT NOT NULL,
	USEFUL INTEGER,
	CONSTRAINT REVIEW_PK PRIMARY KEY (ID),
	CONSTRAINT USER_ID_RVW_FK FOREIGN KEY (USER_ID) REFERENCES USER_T(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
	CONSTRAINT FILM_ID_RVW_FK FOREIGN KEY (FILM_ID) REFERENCES FILM_T(ID) ON DELETE RESTRICT ON UPDATE CASCADE
);
